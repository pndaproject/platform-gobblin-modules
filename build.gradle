/*  Copyright (c) 2016 Cisco and/or its affiliates.
*
* This software is licensed to you under the terms of the Apache License,
* Version 2.0 (the "License"). You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* The code, technical concepts, and all information contained herein, are the
* property of Cisco Technology, Inc. and/or its affiliated entities, under
* various laws including copyright, international treaties, patent, and/or
* contract. Any use of the material herein must be in accordance with the
* terms of the License.  All rights not expressly granted by the License are
* reserved.
*
* Unless required by applicable law or agreed to separately in writing,
* software distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*/

apply plugin: 'java'

repositories {
   mavenCentral()
   maven {
    url "http://packages.confluent.io/maven/"
  }
}

ext.externalDependency = [
    "avro": "org.apache.avro:avro:1.8.1",
    "avroMapredH2": "org.apache.avro:avro-mapred:1.8.1",
    "slf4j": [
        "org.slf4j:slf4j-api:1.7.21",
        "org.slf4j:slf4j-log4j12:1.7.21" ,
        "org.slf4j:jcl-over-slf4j:1.7.21"
    ],
    "jacksonCore": "org.codehaus.jackson:jackson-core-asl:1.9.13",
    "testng": "org.testng:testng:6.9.10",
    "commonsVfs": "org.apache.commons:commons-vfs2:2.0"
]

dependencies {
    compile externalDependency.avro
    compile externalDependency.jacksonCore
    compile externalDependency.slf4j
    compile externalDependency.commonsVfs
    compile externalDependency.avroMapredH2
    compile 'org.kitesdk:kite-data-core:1.1.0'

    compile fileTree(dir: 'gobblin-dist/lib/', include: ['*.jar'])
    runtime fileTree(dir: 'gobblin-dist/lib/', include: ['*.jar'])

    testCompile externalDependency.testng
}

configurations {
    compile {
        transitive = true
    }
}

jar {
  [ 'compile','runtime','testCompile' ].each { mode ->
    copy {
        from configurations.getByName(mode).files
        into "./build/libs/"
      }
  }
}

test {
    include '**/*Test*'
}

ext.classification="library"
